version: '3.8'

services:
  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:5000/api
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_ENV=development
    volumes:
      # Volume pour hot reload en développement
      - ./frontend/src:/app/src:cached
      - ./frontend/public:/app/public:cached
    networks:
      - home21-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API (placeholder pour futur développement)
  backend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
    volumes:
      - ./backend:/app:cached
    command: sh -c "echo 'Backend sera ajouté prochainement' && sleep infinity"
    networks:
      - home21-network
    restart: unless-stopped

  # Base de données PostgreSQL
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=home21
      - POSTGRES_USER=home21_user
      - POSTGRES_PASSWORD=home21_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - home21-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U home21_user -d home21"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis pour cache et sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - home21-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx comme reverse proxy (production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites:/etc/nginx/conf.d:ro
      - nginx_logs:/var/log/nginx
    networks:
      - home21-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles: ["production"]

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  home21-network:
    driver: bridge