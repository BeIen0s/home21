name: 🚀 CI/CD Home21

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL || 'https://api.home21.example.com' }}

jobs:
  # Tests et vérifications
  test:
    name: 🧪 Tests et Linting
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🔍 Lint code
        working-directory: ./frontend
        run: npm run lint

      - name: 🧪 Run tests
        working-directory: ./frontend
        run: npm run test -- --coverage --ci

      - name: 📊 Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          name: home21-frontend

  # Build et test Docker
  docker-build:
    name: 🐳 Docker Build Test
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Build Docker image (test)
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: home21-frontend:test
          build-args: |
            REACT_APP_API_URL=${{ env.REACT_APP_API_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Déploiement sur Netlify
  deploy-netlify:
    name: 🌐 Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [test, docker-build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🏗️ Build application
        working-directory: ./frontend
        env:
          REACT_APP_API_URL: ${{ env.REACT_APP_API_URL }}
          REACT_APP_ENV: production
        run: npm run build

      - name: 🚀 Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.1
        with:
          publish-dir: './frontend/build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Déploiement Docker (optionnel)
  deploy-docker:
    name: 🐳 Deploy Docker Image
    runs-on: ubuntu-latest
    needs: [test, docker-build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🐳 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            REACT_APP_API_URL=${{ env.REACT_APP_API_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Notifications
  notify:
    name: 📢 Notifications
    runs-on: ubuntu-latest
    needs: [deploy-netlify]
    if: always()
    steps:
      - name: 📬 Notify deployment status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ needs.deploy-netlify.result }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: env.SLACK_WEBHOOK != ''